[{"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/App.js":"1","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/App.test.js":"2","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/components/Dummy/index.js":"3","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/components/Dummy/style.js":"4","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/components/index.js":"5","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/index.js":"6","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Coordinate/index.js":"7","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Coordinate/style.js":"8","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/One/index.js":"9","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/One/styles.js":"10","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/Two/index.js":"11","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/Two/styles.js":"12","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Homepage/index.js":"13","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Homepage/style.js":"14","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Test/index.js":"15","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Test/style.js":"16","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/One/index.js":"17","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/One/style.js":"18","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/Two/index.js":"19","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/Two/style.js":"20","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/reportWebVitals.js":"21","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/routes.js":"22","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/setupTests.js":"23","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/utils/api.js":"24","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/utils/context.js":"25"},{"size":852,"mtime":1608878227312,"results":"26","hashOfConfig":"27"},{"size":246,"mtime":1605832964070,"results":"28","hashOfConfig":"27"},{"size":126,"mtime":1605835405689,"results":"29","hashOfConfig":"27"},{"size":0,"mtime":1605833450970,"results":"30","hashOfConfig":"27"},{"size":52,"mtime":1605833635735,"results":"31","hashOfConfig":"27"},{"size":547,"mtime":1607873183654,"results":"32","hashOfConfig":"27"},{"size":6081,"mtime":1608546142316,"results":"33","hashOfConfig":"27"},{"size":1550,"mtime":1607873183656,"results":"34","hashOfConfig":"27"},{"size":7620,"mtime":1608877871903,"results":"35","hashOfConfig":"27"},{"size":2204,"mtime":1608547204961,"results":"36","hashOfConfig":"27"},{"size":7362,"mtime":1608877355726,"results":"37","hashOfConfig":"27"},{"size":2168,"mtime":1608547525389,"results":"38","hashOfConfig":"27"},{"size":1060,"mtime":1608545716978,"results":"39","hashOfConfig":"27"},{"size":1201,"mtime":1607873183659,"results":"40","hashOfConfig":"27"},{"size":1155,"mtime":1607873183659,"results":"41","hashOfConfig":"27"},{"size":409,"mtime":1607873183659,"results":"42","hashOfConfig":"27"},{"size":3797,"mtime":1608877608149,"results":"43","hashOfConfig":"27"},{"size":1630,"mtime":1608545716978,"results":"44","hashOfConfig":"27"},{"size":5455,"mtime":1608877428990,"results":"45","hashOfConfig":"27"},{"size":1460,"mtime":1608545716979,"results":"46","hashOfConfig":"27"},{"size":362,"mtime":1605832964071,"results":"47","hashOfConfig":"27"},{"size":739,"mtime":1608545716980,"results":"48","hashOfConfig":"27"},{"size":241,"mtime":1605832964072,"results":"49","hashOfConfig":"27"},{"size":276,"mtime":1608805537467,"results":"50","hashOfConfig":"27"},{"size":139,"mtime":1608545716980,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f16pud",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/App.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/App.test.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/components/Dummy/index.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/components/Dummy/style.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/components/index.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/index.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Coordinate/index.js",["108"],"import React, { useState } from \"react\";\nimport Logo from \"./Media/Logo2.svg\";\nimport Certificate from \"./Media/TERNGAKAK.png\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Flex, Wrapper, Card, Footer, WrapperImage } from \"./style.js\";\n\nconst CoordinatePage = () => {\n  const [values, setValues] = useState({\n    column1: \"\",\n    column2: \"\",\n    column3: \"\",\n  });\n\n  const handleChange = (opt) => (e) => {\n    if (opt === 1) {\n      setValues({ column1: e.target.value });\n    } else if (opt === 2) {\n      setValues({ column2: e.target.value });\n    } else {\n      setValues({ column3: e.target.value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    alert(\"A name was submitted: \" + values.column1);\n    e.preventDefault();\n  };\n\n  const [isPressed, setIsPressed] = useState(false);\n  const [pos, setPos] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  const dragMouseDown = (e) => {\n    e = e || window.event;\n    e.preventDefault();\n    setPos((prev) => ({ ...prev, x: e.clientX, y: e.clientY }));\n    setIsPressed(true);\n  };\n  function closeDragElement(e) {\n    console.log(\"in\");\n    setIsPressed(false);\n  }\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n\n    let pos1 = pos.x - e.clientX;\n    let pos2 = pos.y - e.clientY;\n    setPos({\n      x: e.target.offsetLeft + pos1,\n      y: e.target.offsetTop + pos2,\n    });\n    console.log(e.clientX, e.clientY);\n    console.log(pos);\n    console.log(e.target.offsetTop, e.target.offsetLeft);\n    console.log(e.target);\n\n    e.target.style.top = e.target.offsetTop - pos2 + \"px\";\n    e.target.style.left = e.target.offsetLeft - pos1 + \"px\";\n  }\n\n  const inputStyle = {\n    width: \"70%\",\n    height: \"2rem\",\n    borderRadius: \"10px\",\n    fontFamily: \"Nunito\",\n    fontSize: \"20px\",\n  };\n\n  const submitStyle = {\n    width: \"30%\",\n    height: \"2rem\",\n    borderRadius: \"10px\",\n    fontFamily: \"Nunito\",\n    fontSize: \"20px\",\n    marginTop: \"15px\",\n    backgroundColor: \"#04253A\",\n    color: \"white\",\n  };\n\n  const dragStyle = {\n    borderRadius: \"10px\",\n    fontFamily: \"Nunito\",\n    fontSize: \"20px\",\n    backgroundColor: \"white\",\n    color: \"black\",\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Flex\n          direction=\"column\"\n          width=\"100%\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <img src={Logo} alt=\"Logo_svg\" />\n          <p>\n            Certificate Generator is here to help you create all your certicate\n            just a blink with your own template\n          </p>\n          <div style={{ padding: \"0 2rem\" }}>\n            <Flex\n              direction=\"row\"\n              width=\"100%\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Flex\n                direction=\"column\"\n                width=\"40%\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Card>\n                  <form\n                    style={{ textAlign: \"left\", margin: \"0px 0px 0px 5rem\" }}\n                    onSubmit={handleSubmit}\n                  >\n                    <p style={{ margin: \"25px 0px 0px 0px\", color: \"white\" }}>\n                      Column 1\n                    </p>\n                    <input\n                      style={inputStyle}\n                      type=\"text\"\n                      value={values.column1}\n                      onChange={handleChange(1)}\n                    />\n                    <br />\n                    <p style={{ margin: \"15px 0px 0px 0px\", color: \"white\" }}>\n                      Column 2\n                    </p>\n                    <input\n                      style={inputStyle}\n                      type=\"text\"\n                      value={values.column2}\n                      onChange={handleChange(2)}\n                    />\n                    <CloseIcon />\n                    <br />\n                    <p style={{ margin: \"15px 0px 0px 0px\", color: \"white\" }}>\n                      Column 3\n                    </p>\n                    <input\n                      style={inputStyle}\n                      type=\"text\"\n                      value={values.column3}\n                      onChange={handleChange(3)}\n                    />\n                    <CloseIcon />\n                    <br />\n                    <input style={submitStyle} type=\"submit\" value=\"Submit\" />\n                  </form>\n                </Card>\n              </Flex>\n              <Flex\n                direction=\"column\"\n                width=\"60%\"\n                justify=\"start\"\n                alignItems=\"start\"\n              >\n                <div\n                  style={{\n                    position: \"relative\",\n                    width: \"842px\",\n                    height: \"595px\",\n                  }}\n                >\n                  <div\n                    style={dragStyle}\n                    id=\"mydiv\"\n                    onMouseOut={closeDragElement}\n                    onMouseDown={dragMouseDown}\n                    onMouseMove={isPressed ? elementDrag : null}\n                    onMouseUp={closeDragElement}\n                  >\n                    Column 1\n                  </div>\n                  <div\n                    style={dragStyle}\n                    id=\"mydiv\"\n                    onMouseOut={closeDragElement}\n                    onMouseDown={dragMouseDown}\n                    onMouseMove={isPressed ? elementDrag : null}\n                    onMouseUp={closeDragElement}\n                  >\n                    Column 1\n                  </div>\n                  <img\n                    src={Certificate}\n                    alt=\"cert\"\n                    style={{ width: \"100%\", height: \"100%\" }}\n                  />\n                </div>\n              </Flex>\n            </Flex>\n          </div>\n        </Flex>\n      </Wrapper>\n      <Flex direction=\"row\" width=\"100%\" justify=\"center\">\n        <Footer>\n          Copyright © 2020 Certificate Generator. All Rights Reserved.\n        </Footer>\n      </Flex>\n    </>\n  );\n};\n\nexport default CoordinatePage;\n","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Coordinate/style.js",["109"],"import styled from 'styled-components'\nimport { enumDeclaration } from '@babel/types';\n\nexport const Flex = styled.div`\n    display: flex;\n    flex-direction: ${({ direction }) => direction};\n    justify-content: ${({ justify }) => justify};\n    align-items: ${({ alignItems }) => alignItems};\n    flex-wrap: ${({ wrap }) => wrap};\n    margin: ${({ margin }) => margin};\n    width: ${({ width }) => width};\n    height: 100%;\n`;\n\nexport const Wrapper = styled.div`\n  font-family: 'Nunito';\n  backgroundColor: '#F5F5F5';\n  margin-top: 2em;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  #mydiv {\n    position: absolute;\n    z-index: 9;\n    background-color: #fefefe;\n    text-align: center;\n    border: 1px solid #d3d3d3;\n    width: 15%;\n    &:hover {\n      cursor: grab;\n    }\n  }\n  p{\n      font-size: 24px;\n      font-weight: 400;\n      width: 560px;\n      align: center;\n      line-height: 33px;\n  }\n`;\n\nexport const WrapperImage = styled.div`\n  height:100%;\n  width: 100%;\n  background: url(\"${({ url }) => url}\");\n  background-repeat: no-repeat;\n  background-size: contain, cover;\n`;\n\nexport const Card = styled.div`\n    background: #4C837A;\n    margin: 1em;\n    width: 80%;\n    height: 358px;\n    border-radius: 25px;\n    .box{\n        width: 570px;\n        height: 219px;\n        border-style: dotted;\n        p{\n            margin-top: 3.5em;\n        }\n    }\n`;\n\nexport const Footer = styled.p`\n    position: absolute;\n    bottom: 0;\n    font-size: 20px;\n    text-align: center;  \n`;","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/One/index.js",["110","111","112","113","114"],"import React, { useState, Fragment, useContext } from \"react\";\nimport { Flex, Wrapper, Box, Edit } from \"./styles\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Logo from \"./Media/Logo2.svg\";\nimport { PictureContext } from \"../../../utils/context\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../utils/api\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\n\nconst OneEdit = () => {\n  const navigate = useNavigate();\n  const { image, setImage } = useContext(PictureContext);\n  const [inputList, setInputList] = useState([{ column: \"\", x: 0, y: 0 }]);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (event, index) => {\n    const values = [...inputList];\n    values[index][event.target.name] = event.target.value;\n    setInputList(values);\n  };\n\n  const handleAddInput = () => {\n    setInputList([...inputList, { column: \"\", x: 0, y: 0 }]);\n  };\n\n  const handleRemoveInput = () => {\n    const list = [...inputList];\n    const index = inputList.length - 1;\n    list.splice(index, 1);\n    setInputList(list);\n  };\n  console.log(image);\n\n  const [isPressed, setIsPressed] = useState(false);\n  const [pos, setPos] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  const dragMouseDown = (e) => {\n    e = e || window.event;\n    e.preventDefault();\n    setPos((prev) => ({ ...prev, x: e.clientX, y: e.clientY }));\n    setIsPressed(true);\n  };\n\n  function closeDragElement(e) {\n    console.log(\"in\");\n    setIsPressed(false);\n  }\n\n  function elementDrag(e, idx) {\n    e = e || window.event;\n    e.preventDefault();\n\n    let pos1 = pos.x - e.clientX;\n    let pos2 = pos.y - e.clientY;\n    setPos({\n      x: e.clientX,\n      y: e.clientY,\n    });\n    console.log(e.clientX, e.clientY);\n    console.log(pos);\n    console.log(e.target.offsetTop, e.target.offsetLeft);\n    console.log(e.target);\n\n    e.target.style.top = e.target.offsetTop - pos2 + \"px\";\n    e.target.style.left = e.target.offsetLeft - pos1 + \"px\";\n\n    let prevList = [...inputList];\n    let curr = prevList[idx];\n    curr = {\n      ...curr,\n      x: e.target.offsetLeft,\n      y: e.target.offsetTop,\n    };\n    prevList[idx] = curr;\n    setInputList(prevList);\n  }\n  console.log(inputList);\n\n  const onCertUpload = async () => {\n    if (inputList.length === 0 && inputList[0].column !== \"\") {\n      alert(\"You must insert atleast 1 column!\");\n    } else {\n      let formData = {};\n      formData[\"image\"] = JSON.stringify({\n        path: image.url,\n        filename: image.filename,\n      });\n      for (let index = 0; index < inputList.length; index++) {\n        formData[`item${index + 1}`] = JSON.stringify({\n          text: inputList[index].column,\n          width: inputList[index].x,\n          height: inputList[index].y,\n        });\n      }\n      setLoading(true);\n      await axios.post(`${baseUrl}/certificate`, formData).then((res) => {\n        console.log(res.data.data[0]);\n        setTimeout(() => {\n          window.open(res.data.data[0].url);\n          setLoading(false);\n        }, 3000);\n      });\n    }\n  };\n\n  const dragStyle = {\n    borderRadius: \"10px\",\n    fontFamily: \"Nunito\",\n    fontSize: \"20px\",\n    backgroundColor: \"white\",\n    color: \"black\",\n  };\n\n  return (\n    <Wrapper>\n      <Flex direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <img src={Logo} alt=\"Logo_svg\" />\n        <p>\n          Certificate Generator is here to help you create all your certicate\n          just a blink with your own template\n        </p>\n        <Flex\n          direction=\"row\"\n          width=\"100%\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n        >\n          <Flex\n            direction=\"row\"\n            width=\"40%\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n            <Box>\n              <Flex\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                style={{ padding: \"2em\" }}\n              >\n                {inputList.map((item, i) => {\n                  return (\n                    <Fragment key={i}>\n                      <label for=\"column1\">Column {i + 1}</label>\n                      <Flex direction=\"row\" alignItems=\"flex-start\">\n                        <Flex direction=\"column\" alingItems=\"flex-start\">\n                          <input\n                            type=\"text\"\n                            name=\"column\"\n                            value={item.column}\n                            onChange={(e) => handleChange(e, i)}\n                          />\n                          {inputList.length - 1 === i &&\n                            (inputList.length < 3 ? (\n                              <Button\n                                variant=\"contained\"\n                                className=\"addBtn\"\n                                onClick={handleAddInput}\n                              >\n                                <AddIcon />\n                              </Button>\n                            ) : null)}\n                        </Flex>\n                        {inputList.length - 1 === i && i > 0 && (\n                          <Button\n                            variant=\"contained\"\n                            className=\"delBtn\"\n                            onClick={handleRemoveInput}\n                          >\n                            <DeleteIcon />\n                          </Button>\n                        )}\n                      </Flex>\n                    </Fragment>\n                  );\n                })}\n                <Button\n                  variant=\"contained\"\n                  disabled={loading}\n                  color=\"primary\"\n                  className=\"generate\"\n                  onClick={onCertUpload}\n                >\n                  Generate\n                </Button>\n              </Flex>\n              {loading ? (\n                <Flex\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"start\"\n                  style={{ width: \"30em\" }}\n                >\n                  <LinearProgress style={{ width: \"20em\" }} />\n                </Flex>\n              ) : (\n                <p></p>\n              )}\n            </Box>\n          </Flex>\n          <Flex\n            direction=\"row\"\n            width=\"60%\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n            <Flex direction=\"column\" justify=\"start\" alignItems=\"start\">\n              <div\n                style={{\n                  position: \"relative\",\n                  width: \"842px\",\n                  height: \"595px\",\n                }}\n              >\n                {inputList.map((item, i) => {\n                  return (\n                    <div\n                      style={dragStyle}\n                      id=\"mydiv\"\n                      onMouseOut={closeDragElement}\n                      onMouseDown={dragMouseDown}\n                      onMouseMove={isPressed ? (e) => elementDrag(e, i) : null}\n                      onMouseUp={closeDragElement}\n                      key={i}\n                    >\n                      {item.column}\n                    </div>\n                  );\n                })}\n                <img\n                  src={image.url}\n                  alt=\"Edited photo\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                />\n              </div>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  );\n};\n\nexport default OneEdit;\n","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/One/styles.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/Two/index.js",["115","116","117","118","119","120"],"import React, { useState, Fragment, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Logo from \"./Media/Logo2.svg\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport { baseUrl } from \"../../../utils/api\";\nimport { Flex, Wrapper, Box, Edit } from \"./styles\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport { PictureContext, HeaderContext } from \"../../../utils/context\";\n\nconst MultipleEdit = () => {\n  const navigate = useNavigate();\n  const { image } = useContext(PictureContext);\n  const { header, setHeader } = useContext(HeaderContext);\n  const [link, setLink] = useState(\"\");\n  const [able, setAble] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [generating, setGenerating] = useState(false);\n\n  // const handleChange = (event, index) => {\n  // \tconst values = [...inputList];\n  // \tvalues[index][event.target.name] = event.target.value;\n  // \tsetInputList(values);\n  // }\n  console.log(image);\n\n  const [isPressed, setIsPressed] = useState(false);\n  const [pos, setPos] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  const dragMouseDown = (e) => {\n    e = e || window.event;\n    e.preventDefault();\n    setPos((prev) => ({ ...prev, x: e.clientX, y: e.clientY }));\n    setIsPressed(true);\n  };\n\n  function closeDragElement(e) {\n    console.log(\"in\");\n    setIsPressed(false);\n  }\n\n  function elementDrag(e, idx) {\n    e = e || window.event;\n    e.preventDefault();\n\n    let pos1 = pos.x - e.clientX;\n    let pos2 = pos.y - e.clientY;\n    setPos({\n      x: e.clientX,\n      y: e.clientY,\n    });\n    console.log(e.clientX, e.clientY);\n    console.log(pos);\n    console.log(e.target.offsetTop, e.target.offsetLeft);\n    console.log(e.target);\n\n    e.target.style.top = e.target.offsetTop - pos2 + \"px\";\n    e.target.style.left = e.target.offsetLeft - pos1 + \"px\";\n\n    let prevList = [...header];\n    let curr = prevList[idx];\n    curr = { ...curr, x: e.target.offsetLeft, y: e.target.offsetTop };\n    prevList[idx] = curr;\n    setHeader(prevList);\n  }\n  console.log(header);\n\n  const onMultUpload = async () => {\n    if (header.length === 0 && header[0].column !== \"\") {\n      alert(\"You must insert atleast 1 column!\");\n    } else {\n      let formData = {};\n      formData[\"image\"] = JSON.stringify({\n        path: image.url,\n        filename: image.filename,\n      });\n      for (let index = 0; index < header.length; index++) {\n        formData[`item${index + 1}`] = JSON.stringify({\n          text: header[index].data,\n          width: header[index].x,\n          height: header[index].y,\n        });\n      }\n      formData[\"item3\"] = \"\";\n      // if (header.length < 3)\n      console.log(formData);\n      setLoading(true);\n      setGenerating(true);\n      await axios\n        .post(`${baseUrl}/certificate/multiple`, formData)\n        .then((res) => {\n          console.log(res.data.data[0].totalFile);\n          setTimeout(() => {\n            setLink(res.data.data[0].url);\n            setAble(false);\n            setGenerating(false);\n            // window.open(res.data.data[0].url);\n          }, res.data.data[0].totalFile * 10000);\n          setLoading(false);\n          // navigate('/done')\n        });\n    }\n  };\n\n  const multDownload = (zip) => {\n    var url = zip;\n    window.open(url, \"Download\");\n  };\n\n  const dragStyle = {\n    borderRadius: \"10px\",\n    fontFamily: \"Nunito\",\n    fontSize: \"20px\",\n    backgroundColor: \"white\",\n    color: \"black\",\n  };\n\n  return (\n    <Wrapper>\n      <Flex direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <img src={Logo} alt=\"Logo_svg\" />\n        <p>\n          Certificate Generator is here to help you create all your certicate\n          just a blink with your own template\n        </p>\n        <Flex\n          direction=\"row\"\n          width=\"100%\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n        >\n          <Flex\n            direction=\"row\"\n            width=\"40%\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n            <Box>\n              <Flex\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                style={{ padding: \"2em\" }}\n              >\n                {header.map((item, i) => {\n                  return (\n                    <Fragment key={i}>\n                      <label for=\"column1\">Column {i + 1}</label>\n                      <Flex direction=\"row\" alignItems=\"flex-start\">\n                        <Flex direction=\"column\" alingItems=\"flex-start\">\n                          <input\n                            type=\"text\"\n                            name=\"column\"\n                            value={item.header}\n                          />\n                        </Flex>\n                      </Flex>\n                    </Fragment>\n                  );\n                })}\n                <Button\n                  disabled={generating}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"generate\"\n                  onClick={onMultUpload}\n                >\n                  Generate\n                </Button>\n                {able && generating ? (\n                  <Flex direction=\"column\" justify=\"center\" alignItems=\"start\">\n                    <LinearProgress\n                      style={{ width: \"10em\", marginTop: \"2em\" }}\n                    />\n                    {/* <LinearProgress style={{ width: \"40em\" }} /> */}\n                  </Flex>\n                ) : (\n                  <>\n                    <a href={link} download />\n\n                    <Button\n                      style={{ marginTop: \"1rem\" }}\n                      disabled={able}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\"download\"\n                      onClick={() => multDownload(link)}\n                    >\n                      Download\n                    </Button>\n                  </>\n                )}\n              </Flex>\n            </Box>\n          </Flex>\n          <Flex\n            direction=\"row\"\n            width=\"60%\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n            <Flex direction=\"column\" justify=\"start\" alignItems=\"start\">\n              <div\n                style={{\n                  position: \"relative\",\n                  width: \"842px\",\n                  height: \"595px\",\n                }}\n              >\n                {header.map((item, i) => {\n                  return (\n                    <div\n                      style={dragStyle}\n                      id=\"mydiv\"\n                      onMouseOut={closeDragElement}\n                      onMouseDown={dragMouseDown}\n                      onMouseMove={isPressed ? (e) => elementDrag(e, i) : null}\n                      onMouseUp={closeDragElement}\n                      key={i}\n                    >\n                      {item.header}\n                    </div>\n                  );\n                })}\n                <img\n                  src={image.url}\n                  alt=\"Multiple header\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                />\n              </div>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  );\n};\n\nexport default MultipleEdit;\n","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Edit/Two/styles.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Homepage/index.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Homepage/style.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Test/index.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Test/style.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/One/index.js",["121","122"],"import React, { useState, Fragment, useContext } from \"react\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport { PictureContext } from \"../../../utils/context\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Flex, Wrapper, Upload, Footer } from \"./style.js\";\nimport Logo from \"./Media/Logo2.svg\";\nimport { useDropzone } from \"react-dropzone\";\nimport { baseUrl } from \"../../../utils/api\";\n\nconst OneUpload = () => {\n  const navigate = useNavigate();\n  const { image, setImage } = useContext(PictureContext);\n  const [files, setFiles] = useState([]);\n  const [pic, setPic] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n\n  const onFileUpload = async () => {\n    if (files.length === 0) {\n      alert(\"You must upload your image first\");\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", files[0]);\n      setLoading(true);\n      await axios.post(`${baseUrl}/upload`, formData).then((res) => {\n        console.log(res.data);\n        console.log(res.data.data);\n        setPic(res.data.data.path);\n        setImage({ url: res.data.data.path, filename: res.data.data.filename });\n        setLoading(false);\n        navigate(\"/edit-one\");\n      });\n    }\n  };\n  // const [progress, setProgress] = React.useState(0);\n  // React.useEffect(() => {\n  //     const timer = setInterval(() => {\n  //       setProgress((oldProgress) => {\n  //         if (oldProgress === 100) {\n  //           return 0;\n  //         }\n  //         const diff = Math.random() * 10;\n  //         return Math.min(oldProgress + diff, 100);\n  //       });\n  //     }, 500);\n\n  //     return () => {\n  //       clearInterval(timer);\n  //     };\n  //   }, []);\n\n  console.log(files);\n  return (\n    <Fragment>\n      <Wrapper>\n        <Flex direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <img src={Logo} alt=\"Logo_svg\" />\n          <p>\n            Certificate Generator is here to help you create all your certicate\n            just a blink with your own template\n          </p>\n\n          <Upload>\n            <Flex direction=\"column\" justify=\"center\" alignItems=\"center\">\n              <p className=\"header\">\n                Please upload your certificate template here...\n              </p>\n              <div className=\"box\">\n                <div {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  {files.length === 0 ? (\n                    <p>Upload Photo</p>\n                  ) : (\n                    <p>{files[0].name}</p>\n                  )}\n                </div>\n              </div>\n            </Flex>\n          </Upload>\n          <Button\n            variant=\"contained\"\n            disabled={loading}\n            className=\"submit\"\n            onClick={onFileUpload}\n          >\n            Go!!!\n          </Button>\n          {loading ? (\n            <Flex\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{ width: \"50em\" }}\n            >\n              <LinearProgress style={{ width: \"40em\", marginTop: \"2em\" }} />\n              <LinearProgress style={{ width: \"40em\" }} />\n            </Flex>\n          ) : null}\n        </Flex>\n      </Wrapper>\n      <Flex direction=\"row\" justify=\"center\">\n        <Footer style={{ marginTop: \"5em\" }}>\n          Copyright © 2020 Certificate Generator. All Rights Reserved.\n        </Footer>\n      </Flex>\n    </Fragment>\n  );\n};\n\nexport default OneUpload;\n","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/One/style.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/Two/index.js",["123"],"import React, { useState, useContext } from \"react\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport { PictureContext, HeaderContext } from \"../../../utils/context\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Flex, Wrapper, Footer, Paper } from \"./style.js\";\nimport Logo from \"./Media/Logo2.svg\";\nimport Sample from \"./Media/sample.png\";\nimport { useDropzone } from \"react-dropzone\";\nimport { baseUrl } from \"../../../utils/api\";\n\nconst UploadMultiple = () => {\n  const navigate = useNavigate();\n  const { setImage } = useContext(PictureContext);\n  const { header, setHeader } = useContext(HeaderContext);\n  const [files, setFiles] = useState([]);\n  const [excel, setExcel] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n\n  function ExcelDropzone(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \".xlsx\",\n      onDrop: (acceptedFiles) => {\n        setExcel(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n    console.log(excel);\n    console.log(files);\n    return (\n      <div className=\"container\">\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          {excel.length === 0 ? <p>Upload Excel</p> : <p>{excel[0].name}</p>}\n        </div>\n      </div>\n    );\n  }\n  const fileList = [excel[0], files[0]];\n  console.log(fileList);\n  const onFileUpload = async () => {\n    if (files.length === 0) {\n      alert(\"You must upload your image first\");\n    } else {\n      const formData = new FormData();\n      formData.append(\"files\", fileList[0]);\n      formData.append(\"files\", fileList[1]);\n      // formData.append(\"file\", excel[0])\n      console.log(formData.getAll(\"files\"));\n      setLoading(true);\n      await axios.post(`${baseUrl}/upload/multiple`, formData).then((res) => {\n        console.log(res.data);\n        console.log(res.data.data);\n        console.log(res.data.data.excel, res.data.data.excel.length);\n        setImage({\n          url: res.data.data.image.path,\n          filename: res.data.data.image.filename,\n        });\n        let data = [];\n        for (let idx = 0; idx < res.data.data.excel.length; idx++) {\n          console.log(res.data.data.excel[idx]);\n          data = [\n            ...data,\n            {\n              header: res.data.data.excel[idx].header,\n              data: res.data.data.excel[idx].data,\n              x: 0,\n              y: 0,\n            },\n          ];\n        }\n        console.log(data);\n        setHeader(data);\n        setLoading(false);\n        navigate(\"/edit-multiple\");\n      });\n    }\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Flex direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <img src={Logo} alt=\"Logo_svg\" />\n          <p className=\"title\">\n            Certificate Generator is here to help you create all your certicate\n            just a blink with your own template\n          </p>\n          <Flex direction=\"row\" justify=\"space-around\">\n            <Paper>\n              <Flex direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <p className=\"header\">\n                  Please upload your certificate template here...\n                </p>\n                <div className=\"box\">\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    {files.length === 0 ? (\n                      <p>Upload Photo</p>\n                    ) : (\n                      <p>{files[0].name}</p>\n                    )}\n                  </div>\n                </div>\n              </Flex>\n            </Paper>\n            <Paper>\n              <Flex direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <img src={Sample} alt=\"excel-sample\" />\n                <p className=\"header\">Please upload your Excel here...</p>\n                <div className=\"box\">\n                  <ExcelDropzone />\n                </div>\n              </Flex>\n            </Paper>\n          </Flex>\n\n          {files.length !== 0 && excel.length !== 0 ? (\n            <p style={{ fontSize: \"23px\", fontWeight: 600 }}>\n              Your certificate is ready to be made!\n            </p>\n          ) : null}\n          <Button\n            variant=\"contained\"\n            disabled={loading}\n            className=\"submit\"\n            onClick={onFileUpload}\n          >\n            Go!!!\n          </Button>\n          {loading ? (\n            <Flex\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{ width: \"50em\" }}\n            >\n              <LinearProgress style={{ width: \"40em\", marginTop: \"2em\" }} />\n              <LinearProgress style={{ width: \"40em\" }} />\n            </Flex>\n          ) : null}\n        </Flex>\n      </Wrapper>\n      <Flex direction=\"row\" justify=\"center\">\n        <Footer style={{ marginTop: \"5em\" }}>\n          Copyright © 2020 Certificate Generator. All Rights Reserved.\n        </Footer>\n      </Flex>\n    </>\n  );\n};\n\nexport default UploadMultiple;\n","/Users/adykarta/Documents/projects/certificate-generator-frontend/src/pages/Upload/Two/style.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/reportWebVitals.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/routes.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/setupTests.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/utils/api.js",[],"/Users/adykarta/Documents/projects/certificate-generator-frontend/src/utils/context.js",[],{"ruleId":"124","severity":1,"message":"125","line":5,"column":39,"nodeType":"126","messageId":"127","endLine":5,"endColumn":51},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":25},{"ruleId":"124","severity":1,"message":"129","line":2,"column":30,"nodeType":"126","messageId":"127","endLine":2,"endColumn":34},{"ruleId":"124","severity":1,"message":"130","line":10,"column":23,"nodeType":"126","messageId":"127","endLine":10,"endColumn":31},{"ruleId":"124","severity":1,"message":"131","line":13,"column":9,"nodeType":"126","messageId":"127","endLine":13,"endColumn":17},{"ruleId":"124","severity":1,"message":"132","line":14,"column":18,"nodeType":"126","messageId":"127","endLine":14,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":235,"column":17,"nodeType":"135","endLine":239,"endColumn":19},{"ruleId":"124","severity":1,"message":"136","line":1,"column":49,"nodeType":"126","messageId":"127","endLine":1,"endColumn":58},{"ruleId":"124","severity":1,"message":"129","line":6,"column":30,"nodeType":"126","messageId":"127","endLine":6,"endColumn":34},{"ruleId":"124","severity":1,"message":"130","line":7,"column":23,"nodeType":"126","messageId":"127","endLine":7,"endColumn":31},{"ruleId":"124","severity":1,"message":"131","line":11,"column":9,"nodeType":"126","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"124","severity":1,"message":"137","line":16,"column":10,"nodeType":"126","messageId":"127","endLine":16,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":181,"column":21,"nodeType":"135","endLine":181,"endColumn":47},{"ruleId":"124","severity":1,"message":"140","line":13,"column":11,"nodeType":"126","messageId":"127","endLine":13,"endColumn":16},{"ruleId":"124","severity":1,"message":"141","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":13},{"ruleId":"124","severity":1,"message":"142","line":15,"column":11,"nodeType":"126","messageId":"127","endLine":15,"endColumn":17},"no-unused-vars","'WrapperImage' is defined but never used.","Identifier","unusedVar","'enumDeclaration' is defined but never used.","'Edit' is defined but never used.","'Navigate' is defined but never used.","'navigate' is assigned a value but never used.","'setImage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'image' is assigned a value but never used.","'pic' is assigned a value but never used.","'header' is assigned a value but never used."]